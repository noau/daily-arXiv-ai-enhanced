{"id": "2508.21256", "categories": ["cs.PL", "cs.CL", "cs.GR", "68N20, 68N15, 68W10", "D.3.4; D.3.2; D.1.3"], "pdf": "https://arxiv.org/pdf/2508.21256", "abs": "https://arxiv.org/abs/2508.21256", "authors": ["Nripesh Niketan", "Vaatsalya Shrivastva"], "title": "CrossTL: A Universal Programming Language Translator with Unified Intermediate Representation", "comment": "15 Pages, 5 Figures, 1 Table. Introduces CrossTL, a universal\n  programming language translator enabling bidirectional translation between 8\n  programming languages (CUDA, HIP, Metal, DirectX HLSL, OpenGL GLSL, Vulkan\n  SPIR-V, Rust, Mojo) through a unified intermediate representation called\n  CrossGL. Includes comprehensive evaluation with complex real-world examples", "summary": "We present CrossTL, a universal programming language translator enabling\nbidirectional translation between multiple languages through a unified\nintermediate representation called CrossGL. Traditional approaches require\nseparate translators for each language pair, leading to exponential complexity\ngrowth. CrossTL uses a single universal IR to facilitate translations between\nCUDA, HIP, Metal, DirectX HLSL, OpenGL GLSL, Vulkan SPIR-V, Rust, and Mojo,\nwith Slang support in development. Our system consists of: language-specific\nlexers/parsers converting source code to ASTs, bidirectional CrossGL\ntranslation modules implementing ToCrossGLConverter classes for importing code\nand CodeGen classes for target generation, and comprehensive backend\nimplementations handling full translation pipelines. We demonstrate\neffectiveness through comprehensive evaluation across programming domains,\nachieving successful compilation and execution across all supported backends.\nThe universal IR design enables adding new languages with minimal effort,\nrequiring only language-specific frontend/backend components. Our contributions\ninclude: (1) a unified IR capturing semantics of multiple programming\nparadigms, (2) a modular architecture enabling extensibility, (3) a\ncomprehensive framework supporting GPU compute, graphics programming, and\nsystems languages, and (4) empirical validation demonstrating practical\nviability of universal code translation. CrossTL represents a significant step\ntoward language-agnostic programming, enabling write-once, deploy-everywhere\ndevelopment."}
{"id": "2508.21593", "categories": ["cs.PL", "cs.MS", "math.HO"], "pdf": "https://arxiv.org/pdf/2508.21593", "abs": "https://arxiv.org/abs/2508.21593", "authors": ["Anne Baanen", "Matthew Robert Ballard", "Johan Commelin", "Bryan Gin-ge Chen", "Michael Rothgang", "Damiano Testa"], "title": "Growing Mathlib: maintenance of a large scale mathematical library", "comment": "21 pages, 1 figure. To appear at Conference on Intelligent Computer\n  Mathematics (CICM) 2025", "summary": "The Lean mathematical library Mathlib is one of the fastest-growing libraries\nof formalised mathematics. We describe various strategies to manage this\ngrowth, while allowing for change and avoiding maintainer overload. This\nincludes dealing with breaking changes via a deprecation system, using code\nquality analysis tools (linters) to provide direct user feedback about common\npitfalls, speeding up compilation times through conscious library (re-)design,\ndealing with technical debt as well as writing custom tooling to help with the\nreview and triage of new contributions."}
{"id": "2508.21162", "categories": ["cs.GT"], "pdf": "https://arxiv.org/pdf/2508.21162", "abs": "https://arxiv.org/abs/2508.21162", "authors": ["Mohammad Rashid", "Omid Rafieian", "Soheil Ghili"], "title": "Auctions Meet Bandits: An Empirical Analysis", "comment": "42 pages", "summary": "Sponsored search positions are typically allocated through real-time\nauctions, where the outcomes depend on advertisers' quality-adjusted bids - the\nproduct of their bids and quality scores. Although quality scoring helps\npromote ads with higher conversion outcomes, setting these scores for new\nadvertisers in any given market is challenging, leading to the cold-start\nproblem. To address this, platforms incorporate multi-armed bandit algorithms\nin auctions to balance exploration and exploitation. However, little is known\nabout the optimal exploration strategies in such auction environments. We\nutilize data from a leading Asian mobile app store that places sponsored ads\nfor keywords. The platform employs a Thompson Sampling algorithm within a\nsecond-price auction to learn quality scores and allocate a single sponsored\nposition for each keyword. We empirically quantify the gains from optimizing\nexploration under this combined auction-bandit model and show that this problem\ndiffers substantially from the canonical bandit problem. Drawing on these\nempirical insights, we propose a customized exploration strategy in which the\nplatform adjusts the exploration levels for each keyword according to its\ncharacteristics. We derive the Pareto frontier for revenue and efficiency and\nprovide actionable policies, demonstrating substantial gains for the platform\non both metrics when using a tailored exploration approach."}
{"id": "2508.21095", "categories": ["cs.GR", "cs.CV"], "pdf": "https://arxiv.org/pdf/2508.21095", "abs": "https://arxiv.org/abs/2508.21095", "authors": ["Thomas Besnier", "Sylvain Arguillère", "Mohamed Daoudi"], "title": "ScanMove: Motion Prediction and Transfer for Unregistered Body Meshes", "comment": null, "summary": "Unregistered surface meshes, especially raw 3D scans, present significant\nchallenges for automatic computation of plausible deformations due to the lack\nof established point-wise correspondences and the presence of noise in the\ndata. In this paper, we propose a new, rig-free, data-driven framework for\nmotion prediction and transfer on such body meshes. Our method couples a robust\nmotion embedding network with a learned per-vertex feature field to generate a\nspatio-temporal deformation field, which drives the mesh deformation. Extensive\nevaluations, including quantitative benchmarks and qualitative visuals on tasks\nsuch as walking and running, demonstrate the effectiveness and versatility of\nour approach on challenging unregistered meshes."}
{"id": "2508.21672", "categories": ["cs.GT", "cs.IT", "cs.LG", "cs.SY", "eess.SY", "math.IT", "math.OC"], "pdf": "https://arxiv.org/pdf/2508.21672", "abs": "https://arxiv.org/abs/2508.21672", "authors": ["Asrin Efe Yorulmaz", "Raj Kiriti Velicheti", "Melih Bastopcu", "Tamer Başar"], "title": "A Soft Inducement Framework for Incentive-Aided Steering of No-Regret Players", "comment": null, "summary": "In this work, we investigate a steering problem in a mediator-augmented\ntwo-player normal-form game, where the mediator aims to guide players toward a\nspecific action profile through information and incentive design. We first\ncharacterize the games for which successful steering is possible. Moreover, we\nestablish that steering players to any desired action profile is not always\nachievable with information design alone, nor when accompanied with sublinear\npayment schemes. Consequently, we derive a lower bound on the constant payments\nrequired per round to achieve this goal. To address these limitations incurred\nwith information design, we introduce an augmented approach that involves a\none-shot information design phase before the start of the repeated game,\ntransforming the prior interaction into a Stackelberg game. Finally, we\ntheoretically demonstrate that this approach improves the convergence rate of\nplayers' action profiles to the target point by a constant factor with high\nprobability, and support it with empirical results."}
{"id": "2508.21344", "categories": ["cs.GR", "cs.CV"], "pdf": "https://arxiv.org/pdf/2508.21344", "abs": "https://arxiv.org/abs/2508.21344", "authors": ["Jeong Uk Lee", "Sung Hee Choi"], "title": "ARGS: Advanced Regularization on Aligning Gaussians over the Surface", "comment": "9 pages, 4 figures", "summary": "Reconstructing high-quality 3D meshes and visuals from 3D Gaussian\nSplatting(3DGS) still remains a central challenge in computer graphics.\nAlthough existing models such as SuGaR offer effective solutions for rendering,\nthere is is still room to improve improve both visual fidelity and scene\nconsistency. This work builds upon SuGaR by introducing two complementary\nregularization strategies that address common limitations in both the shape of\nindividual Gaussians and the coherence of the overall surface. The first\nstrategy introduces an effective rank regularization, motivated by recent\nstudies on Gaussian primitive structures. This regularization discourages\nextreme anisotropy-specifically, \"needle-like\" shapes-by favoring more\nbalanced, \"disk-like\" forms that are better suited for stable surface\nreconstruction. The second strategy integrates a neural Signed Distance\nFunction (SDF) into the optimization process. The SDF is regularized with an\nEikonal loss to maintain proper distance properties and provides a continuous\nglobal surface prior, guiding Gaussians toward better alignment with the\nunderlying geometry. These two regularizations aim to improve both the fidelity\nof individual Gaussian primitives and their collective surface behavior. The\nfinal model can make more accurate and coherent visuals from 3DGS data."}
{"id": "2508.21256", "categories": ["cs.PL", "cs.CL", "cs.GR", "68N20, 68N15, 68W10", "D.3.4; D.3.2; D.1.3"], "pdf": "https://arxiv.org/pdf/2508.21256", "abs": "https://arxiv.org/abs/2508.21256", "authors": ["Nripesh Niketan", "Vaatsalya Shrivastva"], "title": "CrossTL: A Universal Programming Language Translator with Unified Intermediate Representation", "comment": "15 Pages, 5 Figures, 1 Table. Introduces CrossTL, a universal\n  programming language translator enabling bidirectional translation between 8\n  programming languages (CUDA, HIP, Metal, DirectX HLSL, OpenGL GLSL, Vulkan\n  SPIR-V, Rust, Mojo) through a unified intermediate representation called\n  CrossGL. Includes comprehensive evaluation with complex real-world examples", "summary": "We present CrossTL, a universal programming language translator enabling\nbidirectional translation between multiple languages through a unified\nintermediate representation called CrossGL. Traditional approaches require\nseparate translators for each language pair, leading to exponential complexity\ngrowth. CrossTL uses a single universal IR to facilitate translations between\nCUDA, HIP, Metal, DirectX HLSL, OpenGL GLSL, Vulkan SPIR-V, Rust, and Mojo,\nwith Slang support in development. Our system consists of: language-specific\nlexers/parsers converting source code to ASTs, bidirectional CrossGL\ntranslation modules implementing ToCrossGLConverter classes for importing code\nand CodeGen classes for target generation, and comprehensive backend\nimplementations handling full translation pipelines. We demonstrate\neffectiveness through comprehensive evaluation across programming domains,\nachieving successful compilation and execution across all supported backends.\nThe universal IR design enables adding new languages with minimal effort,\nrequiring only language-specific frontend/backend components. Our contributions\ninclude: (1) a unified IR capturing semantics of multiple programming\nparadigms, (2) a modular architecture enabling extensibility, (3) a\ncomprehensive framework supporting GPU compute, graphics programming, and\nsystems languages, and (4) empirical validation demonstrating practical\nviability of universal code translation. CrossTL represents a significant step\ntoward language-agnostic programming, enabling write-once, deploy-everywhere\ndevelopment."}
