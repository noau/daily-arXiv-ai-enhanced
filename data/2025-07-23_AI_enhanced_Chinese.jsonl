{"id": "2507.16051", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2507.16051", "abs": "https://arxiv.org/abs/2507.16051", "authors": ["Juan Altmayer Pizzorno", "Emery D. Berger"], "title": "RightTyper: Effective and Efficient Type Annotation for Python", "comment": null, "summary": "Python type annotations bring the benefits of static type checking to the\nlanguage. However, manually writing annotations can be time-consuming and\ntedious. The result is that most real-world Python code remains largely\nuntyped. Past approaches to annotating types in Python code fall short in a\nnumber of ways. Static approaches struggle with dynamic features and infer\noverly broad types. AI-based methods are inherently unsound and can miss rare\nor user-defined types. Dynamic methods can impose extreme runtime overheads,\ndegrading performance by up to 270x, abort execution as they exhaust resources,\nand even infer incorrect types that lead to runtime errors. Crucially, all\nprior work assumes implicitly that the code to be annotated is already correct.\nThis assumption is generally unwarranted, especially for large codebases that\nhave been untyped.\n  This paper presents RightTyper, a novel approach for Python that overcomes\nthese disadvantages. RightTyper not only generates precise type annotations\nbased on actual program behavior, improving recall in type checking relative to\nprior approaches. It also turns type checking into anomaly detection, allowing\nthe type checker to identify corner cases that the programmer can audit for\nunintended behavior. RightTyper is also fast and space-efficient, imposing just\n30% performance overhead on average. RightTyper achieves these characteristics\nby a principled yet pervasive use of sampling--guided by self-profiling--along\nwith statistical filtering and careful resolution and aggregation of type\ninformation.", "AI": {"tldr": "RightTyper\u662f\u4e00\u79cd\u65b0\u578b\u7684Python\u7c7b\u578b\u6ce8\u91ca\u5de5\u5177\uff0c\u901a\u8fc7\u52a8\u6001\u91c7\u6837\u548c\u7edf\u8ba1\u8fc7\u6ee4\u751f\u6210\u7cbe\u786e\u7684\u7c7b\u578b\u6ce8\u91ca\uff0c\u540c\u65f6\u5c06\u7c7b\u578b\u68c0\u67e5\u8f6c\u5316\u4e3a\u5f02\u5e38\u68c0\u6d4b\uff0c\u663e\u8457\u51cf\u5c11\u8fd0\u884c\u65f6\u5f00\u9500\u3002", "motivation": "\u73b0\u6709\u7684Python\u7c7b\u578b\u6ce8\u91ca\u65b9\u6cd5\u5728\u52a8\u6001\u7279\u6027\u5904\u7406\u3001\u8fd0\u884c\u65f6\u5f00\u9500\u548c\u4ee3\u7801\u6b63\u786e\u6027\u5047\u8bbe\u65b9\u9762\u5b58\u5728\u4e0d\u8db3\uff0c\u5bfc\u81f4\u5b9e\u9645\u4ee3\u7801\u4e2d\u5927\u90e8\u5206\u672a\u6ce8\u91ca\u7c7b\u578b\u3002", "method": "RightTyper\u57fa\u4e8e\u7a0b\u5e8f\u884c\u4e3a\u751f\u6210\u7cbe\u786e\u7c7b\u578b\u6ce8\u91ca\uff0c\u5229\u7528\u91c7\u6837\u3001\u81ea\u5206\u6790\u548c\u7edf\u8ba1\u8fc7\u6ee4\u6280\u672f\uff0c\u9ad8\u6548\u4e14\u51c6\u786e\u5730\u63a8\u65ad\u7c7b\u578b\u3002", "result": "RightTyper\u663e\u8457\u63d0\u9ad8\u4e86\u7c7b\u578b\u68c0\u67e5\u7684\u53ec\u56de\u7387\uff0c\u540c\u65f6\u4ec5\u4ea7\u751f30%\u7684\u6027\u80fd\u5f00\u9500\uff0c\u5e76\u80fd\u591f\u68c0\u6d4b\u6f5c\u5728\u7684\u7a0b\u5e8f\u5f02\u5e38\u3002", "conclusion": "RightTyper\u901a\u8fc7\u521b\u65b0\u7684\u52a8\u6001\u65b9\u6cd5\u89e3\u51b3\u4e86\u73b0\u6709\u7c7b\u578b\u6ce8\u91ca\u5de5\u5177\u7684\u5c40\u9650\u6027\uff0c\u540c\u65f6\u63d0\u5347\u4e86\u7c7b\u578b\u68c0\u67e5\u7684\u6548\u7387\u548c\u5b9e\u7528\u6027\u3002"}}
{"id": "2507.16086", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.16086", "abs": "https://arxiv.org/abs/2507.16086", "authors": ["Andrew Marmaduke", "Apoorv Ingle", "J. Garrett Morris"], "title": "Understanding Haskell-style Overloading via Open Data and Open Functions", "comment": null, "summary": "We present a new, uniform semantics for Haskell-style overloading. We realize\nour approach in a new core language, System F$_\\mathrm{D}$, whose metatheory we\nmechanize in the Lean4 interactive theorem prover. System F$_\\mathrm{D}$ is\ndistinguished by its open data types and open functions, each given by a\ncollection of instances rather than by a single definition. We show that System\nF$_\\mathrm{D}$ can encode advanced features of Haskell's of type class systems,\nmore expressively than current semantics of these features, and without\nassuming additional type equality axioms.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u7edf\u4e00\u8bed\u4e49System F$_\\mathrm{D}$\uff0c\u7528\u4e8eHaskell\u98ce\u683c\u7684\u91cd\u8f7d\uff0c\u5e76\u5728Lean4\u4e2d\u5b9e\u73b0\u4e86\u5176\u5143\u7406\u8bba\u3002", "motivation": "\u4e3a\u4e86\u89e3\u51b3Haskell\u7c7b\u578b\u7c7b\u7cfb\u7edf\u7684\u9ad8\u7ea7\u7279\u6027\u8868\u8fbe\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u66f4\u7075\u6d3b\u4e14\u4e0d\u9700\u8981\u989d\u5916\u7c7b\u578b\u7b49\u516c\u7406\u7684\u8bed\u4e49\u65b9\u6cd5\u3002", "method": "\u901a\u8fc7\u5b9a\u4e49\u65b0\u7684\u6838\u5fc3\u8bed\u8a00System F$_\\)mathrm{D}$\uff0c\u5b9e\u73b0\u4e86\u5f00\u653e\u6570\u636e\u7c7b\u578b\u548c\u5f00\u653e\u51fd\u6570\uff0c\u5e76\u901a\u8fc7Lean4\u8fdb\u884c\u4e86\u5143\u7406\u8bba\u673a\u68b0\u5316\u9a8c\u8bc1\u3002", "result": "System F$_\\)mathrm{D}$\u80fd\u591f\u66f4\u6e05\u6670\u5730\u7f16\u7801Haskell\u7c7b\u578b\u7c7b\u7cfb\u7edf\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u4e14\u4e0d\u9700\u8981\u989d\u5916\u7684\u7c7b\u578b\u7b49\u516c\u7406\u3002", "conclusion": "System F$_\\)mathrm{D}$\u4e3aHaskell\u98ce\u683c\u7684\u91cd\u8f7d\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7edf\u4e00\u4e14\u66f4\u5177\u8868\u8fbe\u529b\u7684\u8bed\u4e49\u6846\u67b6\u3002"}}
{"id": "2507.16089", "categories": ["cs.PL", "cs.DB"], "pdf": "https://arxiv.org/pdf/2507.16089", "abs": "https://arxiv.org/abs/2507.16089", "authors": ["Michael J. Sullivan", "Zhibo Chen", "Elvis Pranskevichus", "Robert J. Simmons", "Victor Petrovykh", "Alja\u017e Mur Er\u017een", "Yury Selivanov"], "title": "Querying Graph-Relational Data", "comment": null, "summary": "For applications that store structured data in relational databases, there is\nan impedance mismatch between the flat representations encouraged by relational\ndata models and the deeply nested information that applications expect to\nreceive. In this work, we present the graph-relational database model, which\nprovides a flexible, compositional, and strongly-typed solution to this\n\"object-relational mismatch.\" We formally define the graph-relational database\nmodel and present a static and dynamic semantics for queries. In addition, we\ndiscuss the realization of the graph-relational database model in EdgeQL, a\ngeneral-purpose SQL-style query language, and the Gel system, which compiles\nEdgeQL schemas and queries into PostgreSQL queries. Gel facilitates the kind of\nobject-shaped data manipulation that is frequently provided inefficiently by\nobject-relational mapping (ORM) technologies, while achieving most of the\nefficiency that comes from require writing complex PostgreSQL queries directly.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u56fe-\u5173\u7cfb\u6570\u636e\u5e93\u6a21\u578b\uff0c\u4ee5\u89e3\u51b3\u4f20\u7edf\u5173\u7cfb\u6570\u636e\u5e93\u4e0e\u5e94\u7528\u671f\u671b\u7684\u6df1\u5c42\u5d4c\u5957\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u95ee\u9898\u3002", "motivation": "\u4f20\u7edf\u7684\u5173\u7cfb\u6570\u636e\u5e93\u6a21\u578b\u4e0e\u5e94\u7528\u671f\u671b\u7684\u6df1\u5c42\u5d4c\u5957\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u5b58\u5728\u4e0d\u5339\u914d\u95ee\u9898\uff0c\u672c\u6587\u65e8\u5728\u63d0\u4f9b\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u6587\u4e2d\u6b63\u5f0f\u5b9a\u4e49\u4e86\u56fe-\u5173\u7cfb\u6570\u636e\u5e93\u6a21\u578b\uff0c\u5e76\u63d0\u4f9b\u4e86\u67e5\u8be2\u7684\u9759\u6001\u548c\u52a8\u6001\u8bed\u4e49\u3002\u6b64\u5916\uff0c\u8fd8\u5b9e\u73b0\u4e86EdgeQL\uff08\u4e00\u79cd\u7c7b\u4f3cSQL\u7684\u67e5\u8be2\u8bed\u8a00\uff09\u548cGel\u7cfb\u7edf\uff0c\u5c06EdgeQL\u6a21\u5f0f\u548c\u67e5\u8be2\u7f16\u8bd1\u4e3aPostgreSQL\u67e5\u8be2\u3002", "result": "\u56fe-\u5173\u7cfb\u6570\u636e\u5e93\u6a21\u578b\u901a\u8fc7EdgeQL\u548cGel\u7cfb\u7edf\uff0c\u5b9e\u73b0\u4e86\u9ad8\u6548\u7684\u7c7b\u5bf9\u8c61\u6570\u636e\u64cd\u4f5c\uff0c\u907f\u514d\u4e86\u4f20\u7edfORM\u6280\u672f\u7684\u4f4e\u6548\u6027\uff0c\u540c\u65f6\u63a5\u8fd1\u76f4\u63a5\u7f16\u5199\u590d\u6742PostgreSQL\u67e5\u8be2\u7684\u6548\u7387\u3002", "conclusion": "\u56fe-\u5173\u7cfb\u6570\u636e\u5e93\u6a21\u578b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\u3001\u7ec4\u5408\u6027\u5f3a\u4e14\u5f3a\u7c7b\u578b\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u5bf9\u8c61-\u5173\u7cfb\u4e0d\u5339\u914d\u95ee\u9898\uff0c\u5e76\u5728\u6548\u7387\u548c\u529f\u80fd\u4e0a\u53d6\u5f97\u4e86\u826f\u597d\u5e73\u8861\u3002"}}
{"id": "2507.16660", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.16660", "abs": "https://arxiv.org/abs/2507.16660", "authors": ["Xuran Cai"], "title": "Enhancing Compiler Optimization Efficiency through Grammatical Decompositions of Control-Flow Graphs", "comment": null, "summary": "This thesis addresses the complexities of compiler optimizations, such as\nregister allocation and Lifetime-optimal Speculative Partial Redundancy\nElimination (LOSPRE), which are often handled using tree decomposition\nalgorithms. However, these methods frequently overlook important sparsity\naspects of Control Flow Graphs (CFGs) and result in high computational costs.\nWe introduce the SPL (Series-Parallel-Loop) decomposition, a novel framework\nthat offers optimal solutions to these challenges. A key contribution is the\nformulation of a general solution for Partial Constraint Satisfaction Problems\n(PCSPs) within graph structures, applied to three optimization problems. First,\nSPL decomposition enhances register allocation by accurately modeling variable\ninterference graphs, leading to efficient register assignments and improved\nperformance across benchmarks. Second, it optimizes LOSPRE by effectively\nidentifying and eliminating redundancies in program execution. Finally, the\nthesis focuses on optimizing the placement of bank selection instructions to\nenhance data retrieval efficiency and reduce latency. Extensive experimentation\ndemonstrates significant performance improvements over existing methods,\nestablishing SPL decomposition as a powerful tool for complex compiler\noptimizations, including register allocation, LOSPRE, and bank selection.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aSPL\uff08Series-Parallel-Loop\uff09\u5206\u89e3\u7684\u65b0\u6846\u67b6\uff0c\u7528\u4e8e\u89e3\u51b3\u7f16\u8bd1\u5668\u4f18\u5316\u4e2d\u7684\u590d\u6742\u95ee\u9898\uff0c\u5982\u5bc4\u5b58\u5668\u5206\u914d\u548cLifetime-optimal Speculative Partial Redundancy Elimination (LOSPRE)\u3002", "motivation": "\u5f53\u524d\u7684\u6811\u5206\u89e3\u7b97\u6cd5\u5728\u5904\u7406\u63a7\u5236\u6d41\u56fe\uff08CFGs\uff09\u7684\u7a00\u758f\u6027\u65f6\u5b58\u5728\u4e0d\u8db3\uff0c\u5e76\u4e14\u8ba1\u7b97\u6210\u672c\u9ad8\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002", "method": "\u8bba\u6587\u5f15\u5165\u4e86SPL\u5206\u89e3\u6846\u67b6\uff0c\u5e76\u5728\u56fe\u7ed3\u6784\u4e2d\u4e3a\u90e8\u5206\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\uff08PCSPs\uff09\u63d0\u4f9b\u4e86\u901a\u7528\u89e3\u51b3\u65b9\u6848\u3002\u8be5\u65b9\u6cd5\u5e94\u7528\u4e8e\u4e09\u4e2a\u4f18\u5316\u95ee\u9898\uff1a\u5bc4\u5b58\u5668\u5206\u914d\u3001LOSPRE\u4f18\u5316\u548c\u94f6\u884c\u9009\u62e9\u6307\u4ee4\u7684\u653e\u7f6e\u4f18\u5316\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cSPL\u5206\u89e3\u5728\u5bc4\u5b58\u5668\u5206\u914d\u3001LOSPRE\u4f18\u5316\u548c\u94f6\u884c\u9009\u62e9\u65b9\u9762\u663e\u8457\u63d0\u5347\u4e86\u6027\u80fd\uff0c\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "SPL\u5206\u89e3\u88ab\u8bc1\u660e\u662f\u89e3\u51b3\u590d\u6742\u7f16\u8bd1\u5668\u4f18\u5316\u95ee\u9898\u7684\u5f3a\u5927\u5de5\u5177\uff0c\u80fd\u591f\u9ad8\u6548\u5904\u7406\u5bc4\u5b58\u5668\u5206\u914d\u3001LOSPRE\u548c\u94f6\u884c\u9009\u62e9\u4f18\u5316\u7b49\u4efb\u52a1\u3002"}}
{"id": "2507.16209", "categories": ["cs.GT", "cs.DS"], "pdf": "https://arxiv.org/pdf/2507.16209", "abs": "https://arxiv.org/abs/2507.16209", "authors": ["Telikepalli Kavitha", "Surya Panchapakesan", "Rohit Vaish", "Vignesh Viswanathan", "Jatin Yadav"], "title": "Best-of-Both-Worlds Guarantees with Fairer Endings", "comment": "46 pages. Abstract shortened to meet arXiv requirements", "summary": "Fair allocation of indivisible goods is a fundamental problem at the\ninterface of economics and computer science. Traditional approaches focus\neither on randomized allocations that are fair in expectation or deterministic\nallocations that are approximately fair. Recent work reconciles both these\napproaches via best-of-both-worlds guarantees, wherein one seeks randomized\nallocations that are fair in expectation (ex-ante fair) while being supported\non approximately fair allocations (ex-post fair). Prior work has shown that\nunder additive valuations, there always exists a randomized allocation that is\nex-ante stochastic-dominance envy-free (sd-EF) and ex-post envy-free up to one\ngood (EF1).\n  Our work is motivated by the goal of achieving stronger ex-post fairness\nguarantees such as envy-freeness up to any good (EFX) along with meaningful\nex-ante guarantees. We make the following contributions:\n  1) We first consider lexicographic preferences, a subdomain of additive\nvaluations where ex-post EFX allocations always exist and can be computed\nefficiently. On the negative side, we show that ex-ante sd-EF is fundamentally\nincompatible with ex-post EFX, prompting a relaxation of the ex-ante benchmark.\nWe then present a poly. time algorithm that achieves ex-post EFX and PO\ntogether with ex-ante 9/10-EF. Our algorithm uses dependent rounding and\nleverages structural properties of EFX and PO allocations.\n  2)For monotone valuations, we study EFX-with-charity: a relaxation of EFX\nwhere some goods remain unallocated, with no agent envying the unallocated\npool. We show that ex-post EFX-with-charity can be achieved alongside ex-ante\n0.5-EF.\n  3)Finally, for subadditive valuations, we strengthen our previous ex-post\nguarantee to EFX-with-bounded-charity, where at most n-1 goods (n= no. of\nagents) remain unallocated, at the price of weakening the ex-ante guarantee to\n0.5-proportionality.", "AI": {"tldr": "\u8be5\u8bba\u6587\u7814\u7a76\u4e86\u5982\u4f55\u5728\u4e0d\u540c\u4f30\u503c\u5047\u8bbe\u4e0b\uff0c\u901a\u8fc7\u968f\u673a\u5206\u914d\u5b9e\u73b0\u66f4\u5f3a\u7684\u516c\u5e73\u6027\u4fdd\u8bc1\uff0c\u5982EFX\u548cEF1\u3002", "motivation": "\u76ee\u6807\u662f\u5b9e\u73b0\u66f4\u5f3a\u7684\u540e\u9a8c\u516c\u5e73\u6027\u4fdd\u8bc1\uff08\u5982EFX\uff09\u4ee5\u53ca\u6709\u610f\u4e49\u7684\u524d\u9a8c\u516c\u5e73\u6027\u4fdd\u8bc1\u3002", "method": "\u8bba\u6587\u91c7\u7528\u4f9d\u8d56\u820d\u5165\u6280\u672f\uff0c\u5229\u7528EFX\u548cPO\u5206\u914d\u7684\u7ed3\u6784\u6027\u8d28\uff0c\u5e76\u63d0\u51fa\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u3002", "result": "\u5728\u8bcd\u5178\u504f\u597d\u4e0b\uff0c\u5b9e\u73b0\u4e86\u540e\u9a8cEFX\u548cPO\uff0c\u540c\u65f6\u524d\u9a8c\u8fbe\u52309/10-EF\uff1b\u5728\u5355\u8c03\u4f30\u503c\u4e0b\uff0c\u5b9e\u73b0\u4e86\u540e\u9a8cEFX-with-charity\u548c\u524d\u9a8c0.5-EF\uff1b\u5728\u6b21\u52a0\u4f30\u503c\u4e0b\uff0c\u5b9e\u73b0\u4e86\u540e\u9a8cEFX-with-bounded-charity\u548c\u524d\u9a8c0.5-proportionality\u3002", "conclusion": "\u7814\u7a76\u8868\u660e\uff0c\u5728\u4e0d\u540c\u4f30\u503c\u5047\u8bbe\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u5e73\u8861\u524d\u9a8c\u548c\u540e\u9a8c\u516c\u5e73\u6027\u3002"}}
{"id": "2507.15979", "categories": ["cs.GR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.15979", "abs": "https://arxiv.org/abs/2507.15979", "authors": ["Marcel C. B\u00fchler", "Ye Yuan", "Xueting Li", "Yangyi Huang", "Koki Nagano", "Umar Iqbal"], "title": "Dream, Lift, Animate: From Single Images to Animatable Gaussian Avatars", "comment": null, "summary": "We introduce Dream, Lift, Animate (DLA), a novel framework that reconstructs\nanimatable 3D human avatars from a single image. This is achieved by leveraging\nmulti-view generation, 3D Gaussian lifting, and pose-aware UV-space mapping of\n3D Gaussians. Given an image, we first dream plausible multi-views using a\nvideo diffusion model, capturing rich geometric and appearance details. These\nviews are then lifted into unstructured 3D Gaussians. To enable animation, we\npropose a transformer-based encoder that models global spatial relationships\nand projects these Gaussians into a structured latent representation aligned\nwith the UV space of a parametric body model. This latent code is decoded into\nUV-space Gaussians that can be animated via body-driven deformation and\nrendered conditioned on pose and viewpoint. By anchoring Gaussians to the UV\nmanifold, our method ensures consistency during animation while preserving fine\nvisual details. DLA enables real-time rendering and intuitive editing without\nrequiring post-processing. Our method outperforms state-of-the-art approaches\non ActorsHQ and 4D-Dress datasets in both perceptual quality and photometric\naccuracy. By combining the generative strengths of video diffusion models with\na pose-aware UV-space Gaussian mapping, DLA bridges the gap between\nunstructured 3D representations and high-fidelity, animation-ready avatars.", "AI": {"tldr": "DLA\u6846\u67b6\u901a\u8fc7\u7ed3\u5408\u591a\u89c6\u89d2\u751f\u6210\u30013D\u9ad8\u65af\u63d0\u5347\u548c\u59ff\u6001\u611f\u77e5UV\u7a7a\u95f4\u6620\u5c04\uff0c\u4ece\u5355\u5f20\u56fe\u50cf\u91cd\u5efa\u53ef\u52a8\u753b\u76843D\u4eba\u4f53\u5316\u8eab\uff0c\u5b9e\u73b0\u4e86\u9ad8\u4fdd\u771f\u6548\u679c\u548c\u5b9e\u65f6\u6e32\u67d3\u3002", "motivation": "\u5f53\u524d3D\u4eba\u4f53\u5316\u8eab\u91cd\u5efa\u65b9\u6cd5\u5728\u52a8\u753b\u4fdd\u771f\u5ea6\u548c\u7ec6\u8282\u4fdd\u7559\u65b9\u9762\u5b58\u5728\u4e0d\u8db3\u3002DLA\u65e8\u5728\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u7ed3\u5408\u751f\u6210\u6a21\u578b\u548c\u7ed3\u6784\u5316\u8868\u793a\uff0c\u63d0\u5347\u52a8\u753b\u8d28\u91cf\u3002", "method": "DLA\u5229\u7528\u89c6\u9891\u6269\u6563\u6a21\u578b\u751f\u6210\u591a\u89c6\u89d2\u56fe\u50cf\uff0c\u63d0\u53d63D\u9ad8\u65af\u70b9\u4e91\uff0c\u5e76\u901a\u8fc7\u57fa\u4e8eTransformer\u7684\u7f16\u7801\u5668\u5c06\u5176\u6620\u5c04\u5230\u53c2\u6570\u5316\u4eba\u4f53\u6a21\u578b\u7684UV\u7a7a\u95f4\uff0c\u5b9e\u73b0\u7ed3\u6784\u5316\u8868\u793a\u3002", "result": "DLA\u5728ActorsHQ\u548c4D-Dress\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u4f18\u5f02\uff0c\u5728\u611f\u77e5\u8d28\u91cf\u548c\u5149\u5ea6\u7cbe\u5ea6\u4e0a\u5747\u8d85\u8d8a\u73b0\u6709\u65b9\u6cd5\uff0c\u652f\u6301\u5b9e\u65f6\u6e32\u67d3\u548c\u76f4\u89c2\u7f16\u8f91\u3002", "conclusion": "DLA\u6846\u67b6\u6210\u529f\u586b\u8865\u4e86\u975e\u7ed3\u6784\u53163D\u8868\u793a\u4e0e\u9ad8\u4fdd\u771f\u52a8\u753b\u5316\u5316\u8eab\u4e4b\u95f4\u7684\u6280\u672f\u9e3f\u6c9f\uff0c\u4e3a3D\u91cd\u5efa\u9886\u57df\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002"}}
{"id": "2507.16463", "categories": ["cs.GR", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.16463", "abs": "https://arxiv.org/abs/2507.16463", "authors": ["Fabrizio Nunnari", "Shailesh Mishra", "Patrick Gebhard"], "title": "MMS Player: an open source software for parametric data-driven animation of Sign Language avatars", "comment": null, "summary": "This paper describes the MMS-Player, an open source software able to\nsynthesise sign language animations from a novel sign language representation\nformat called MMS (MultiModal Signstream). The MMS enhances gloss-based\nrepresentations by adding information on parallel execution of signs, timing,\nand inflections. The implementation consists of Python scripts for the popular\nBlender 3D authoring tool and can be invoked via command line or HTTP API.\nAnimations can be rendered as videos or exported in other popular 3D animation\nexchange formats. The software is freely available under GPL-3.0 license at\nhttps://github.com/DFKI-SignLanguage/MMS-Player.", "AI": {"tldr": "MMS-Player\u662f\u4e00\u4e2a\u5f00\u6e90\u8f6f\u4ef6\uff0c\u80fd\u591f\u4ece\u65b0\u578b\u624b\u8bed\u8868\u793a\u683c\u5f0fMMS\u5408\u6210\u624b\u8bed\u52a8\u753b\uff0c\u652f\u6301\u5e76\u884c\u6267\u884c\u3001\u65f6\u95f4\u548c\u53d8\u5f62\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7Blender 3D\u5de5\u5177\u5b9e\u73b0\u3002", "motivation": "\u4e3a\u4e86\u89e3\u51b3\u4f20\u7edf\u57fa\u4e8e\u6ce8\u91ca\u7684\u624b\u8bed\u8868\u793a\u683c\u5f0f\u7f3a\u4e4f\u5e76\u884c\u6267\u884c\u548c\u65f6\u95f4\u4fe1\u606f\u7684\u95ee\u9898\uff0c\u5f00\u53d1\u4e86MMS-Player\u4ee5\u589e\u5f3a\u624b\u8bed\u52a8\u753b\u7684\u5408\u6210\u80fd\u529b\u3002", "method": "\u4f7f\u7528Python\u811a\u672c\u4e0eBlender 3D\u5de5\u5177\u96c6\u6210\uff0c\u652f\u6301\u547d\u4ee4\u884c\u6216HTTP API\u8c03\u7528\uff0c\u4ee5MMS\u683c\u5f0f\u8f93\u5165\u5e76\u751f\u6210\u52a8\u753b\u3002", "result": "MMS-Player\u6210\u529f\u5b9e\u73b0\u4e86\u4eceMMS\u683c\u5f0f\u751f\u6210\u9ad8\u8d28\u91cf\u624b\u8bed\u52a8\u753b\uff0c\u5e76\u652f\u6301\u591a\u79cd\u8f93\u51fa\u683c\u5f0f\uff0c\u5982\u89c6\u9891\u548c3D\u52a8\u753b\u4ea4\u6362\u683c\u5f0f\u3002", "conclusion": "MMS-Player\u4e3a\u624b\u8bed\u7814\u7a76\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u4e14\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u5f00\u6e90\u8bb8\u53ef\u4fc3\u8fdb\u4e86\u793e\u533a\u7684\u4f7f\u7528\u548c\u6539\u8fdb\u3002"}}
