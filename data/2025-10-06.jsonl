{"id": "2510.02390", "categories": ["cs.GR", "cs.AI", "eess.IV"], "pdf": "https://arxiv.org/pdf/2510.02390", "abs": "https://arxiv.org/abs/2510.02390", "authors": ["Zilai Li"], "title": "Hyperparameters are all you need: Using five-step inference for an original diffusion model to generate images comparable to the latest distillation model", "comment": "10 pages, 5 figures, conference", "summary": "The diffusion model is a state-of-the-art generative model that generates an\nimage by applying a neural network iteratively. Moreover, this generation\nprocess is regarded as an algorithm solving an ordinary differential equation\nor a stochastic differential equation. Based on the analysis of the truncation\nerror of the diffusion ODE and SDE, our study proposes a training-free\nalgorithm that generates high-quality 512 x 512 and 1024 x 1024 images in eight\nsteps, with flexible guidance scales. To the best of my knowledge, our\nalgorithm is the first one that samples a 1024 x 1024 resolution image in 8\nsteps with an FID performance comparable to that of the latest distillation\nmodel, but without additional training. Meanwhile, our algorithm can also\ngenerate a 512 x 512 image in 8 steps, and its FID performance is better than\nthe inference result using state-of-the-art ODE solver DPM++ 2m in 20 steps. We\nvalidate our eight-step image generation algorithm using the COCO 2014, COCO\n2017, and LAION datasets. And our best FID performance is 15.7, 22.35, and\n17.52. While the FID performance of DPM++2m is 17.3, 23.75, and 17.33. Further,\nit also outperforms the state-of-the-art AMED-plugin solver, whose FID\nperformance is 19.07, 25.50, and 18.06. We also apply the algorithm in\nfive-step inference without additional training, for which the best FID\nperformance in the datasets mentioned above is 19.18, 23.24, and 19.61,\nrespectively, and is comparable to the performance of the state-of-the-art AMED\nPulgin solver in eight steps, SDXL-turbo in four steps, and the\nstate-of-the-art diffusion distillation model Flash Diffusion in five steps. We\nalso validate our algorithm in synthesizing 1024 * 1024 images within 6 steps,\nwhose FID performance only has a limited distance to the latest distillation\nalgorithm. The code is in repo:\nhttps://github.com/TheLovesOfLadyPurple/Hyperparameters-are-all-you-need"}
{"id": "2510.02651", "categories": ["cs.GR"], "pdf": "https://arxiv.org/pdf/2510.02651", "abs": "https://arxiv.org/abs/2510.02651", "authors": ["Mahsa Partovi", "Federico Iuricich"], "title": "Visualizing Spatial Point Clouds: A Task-Oriented Taxonomy", "comment": "12 pages, 3 figures, 1 table", "summary": "The visualization of 3D point cloud data is essential in fields such as\nautonomous navigation, environmental monitoring, and disaster response, where\ntasks like object recognition, structural analysis, and spatiotemporal\nexploration rely on clear and effective visual representation. Despite\nadvancements in AI-driven processing, visualization remains a critical tool for\ninterpreting complex spatial datasets. However, designing effective point cloud\nvisualizations presents significant challenges due to the sparsity, density\nvariations, and scale of the data. In this work, we analyze the design space of\nspatial point cloud visualization, highlighting a gap in systematically mapping\nvisualization techniques to analytical objectives. We introduce a taxonomy that\ncategorizes four decades of visualization design choices, linking them to\nfundamental challenges in modern applications. By structuring visualization\nstrategies based on data types, user objectives, and visualization techniques,\nour framework provides a foundation for advancing more effective,\ninterpretable, and user-centered visualization techniques."}
{"id": "2510.02884", "categories": ["cs.GR"], "pdf": "https://arxiv.org/pdf/2510.02884", "abs": "https://arxiv.org/abs/2510.02884", "authors": ["Xinran Zhang", "Hanqi Zhu", "Yifan Duan", "Yanyong Zhang"], "title": "GS-Share: Enabling High-fidelity Map Sharing with Incremental Gaussian Splatting", "comment": "11 pages, 11 figures", "summary": "Constructing and sharing 3D maps is essential for many applications,\nincluding autonomous driving and augmented reality. Recently, 3D Gaussian\nsplatting has emerged as a promising approach for accurate 3D reconstruction.\nHowever, a practical map-sharing system that features high-fidelity, continuous\nupdates, and network efficiency remains elusive. To address these challenges,\nwe introduce GS-Share, a photorealistic map-sharing system with a compact\nrepresentation. The core of GS-Share includes anchor-based global map\nconstruction, virtual-image-based map enhancement, and incremental map update.\nWe evaluate GS-Share against state-of-the-art methods, demonstrating that our\nsystem achieves higher fidelity, particularly for extrapolated views, with\nimprovements of 11%, 22%, and 74% in PSNR, LPIPS, and Depth L1, respectively.\nFurthermore, GS-Share is significantly more compact, reducing map transmission\noverhead by 36%."}
{"id": "2510.02579", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2510.02579", "abs": "https://arxiv.org/abs/2510.02579", "authors": ["Santiago Cu√©llar", "Naomi Spargo", "Jonathan Daugherty", "David Darais"], "title": "Designing Walrus: Relational Programming with Rich Types, On-Demand Laziness, and Structured Traces", "comment": "20 pages, miniKanren 2025", "summary": "We present Walrus, a functional relational programming language embedded in\nHaskell that extends the miniKanren model with type-polymorphic unification,\non-demand laziness, and a range of usability features aimed at practical\ndevelopment. These include use of Haskell Generics for boilerplate reduction,\nstructured debugging traces, and ergonomic support for product types. We\ndescribe the design and implementation of Walrus through the lens of our\nexperience developing bidirectional compilers, and reflect on key design\ndecisions and recurring usability challenges encountered in practice."}
{"id": "2510.02714", "categories": ["cs.GT"], "pdf": "https://arxiv.org/pdf/2510.02714", "abs": "https://arxiv.org/abs/2510.02714", "authors": ["Mustafa O. Karabag", "Jesse Milzman", "Ufuk Topcu"], "title": "Deceptive Planning Exploiting Inattention Blindness", "comment": null, "summary": "We study decision-making with rational inattention in settings where agents\nhave perception constraints. In such settings, inaccurate prior beliefs or\nmodels of others may lead to inattention blindness, where an agent is unaware\nof its incorrect beliefs. We model this phenomenon in two-player zero-sum\nstochastic games, where Player 1 has perception constraints and Player 2\ndeceptively deviates from its security policy presumed by Player 1 to gain an\nadvantage. We formulate the perception constraints as an online sensor\nselection problem, develop a value-weighted objective function for sensor\nselection capturing rational inattention, and propose the greedy algorithm for\nselection under this monotone objective function. When Player 2 does not\ndeviate from the presumed policy, this objective function provides an upper\nbound on the expected value loss compared to the security value where Player 1\nhas perfect information of the state. We then propose a myopic decision-making\nalgorithm for Player 2 to exploit Player 1's beliefs by deviating from the\npresumed policy and, thereby, improve upon the security value. Numerical\nexamples illustrate how Player 1 persistently chooses sensors that are\nconsistent with its priors, allowing Player 2 to systematically exploit its\ninattention."}
{"id": "2510.03170", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2510.03170", "abs": "https://arxiv.org/abs/2510.03170", "authors": ["Rafaello Sanna", "William E. Byrd", "Nada Amin"], "title": "Beyond Cons: Purely Relational Data Structures", "comment": "17 pages, 6 figures, Source code available at\n  https://www.github.com/rvs314/faster-clpset-minikanren . To be published in\n  the 7th Workshop on miniKanren and Relational Programming (miniKanren'25)", "summary": "We present {Kanren} (read: set-Kanren), an extension to miniKanren with\nconstraints for reasoning about sets and association lists. {Kanren} includes\nfirst-class set objects, a functionally complete family of set-theoretic\nconstraints (including membership, union, and disjointedness), and new\nconstraints for reasoning about association lists with shadowing and scoped\nlookup. These additions allow programmers to describe collections declaratively\nand lazily, without relying on structural encodings and eager search over\nrepresentation spaces. The result is improved expressiveness and operational\nbehavior in programs that manipulate abstract data -- particularly interpreters\n-- by supporting set equality based on contents, enabling finite failure. We\ndescribe the design and implementation of {Kanren} in a constraint-enabled\nminiKanren system and illustrate its use in representative examples."}
{"id": "2510.02984", "categories": ["cs.GT", "cs.FL", "F.4.3"], "pdf": "https://arxiv.org/pdf/2510.02984", "abs": "https://arxiv.org/abs/2510.02984", "authors": ["Nathalie Bertrand", "Patricia Bouyer", "Luc Lapointe", "Corto Mascle"], "title": "Reach together: How populations win repeated games", "comment": null, "summary": "In repeated games, players choose actions concurrently at each step. We\nconsider a parameterized setting of repeated games in which the players form a\npopulation of an arbitrary size. Their utility functions encode a reachability\nobjective. The problem is whether there exists a uniform coalition strategy for\nthe players so that they are sure to win independently of the population size.\nWe use algebraic tools to show that the problem can be solved in polynomial\nspace. First we exhibit a finite semigroup whose elements summarize strategies\nover a finite interval of population sizes. Then, we characterize the existence\nof winning strategies by the existence of particular elements in this\nsemigroup. Finally, we provide a matching complexity lower bound, to conclude\nthat repeated population games with reachability objectives are\nPSPACE-complete."}
