{"id": "2509.04936", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.04936", "abs": "https://arxiv.org/abs/2509.04936", "authors": ["Andrea Gilot", "Tobias Wrigstad", "Eva Darulova"], "title": "A Large-Scale Study of Floating-Point Usage in Statically Typed Languages", "comment": null, "summary": "Reasoning about floating-point arithmetic is notoriously hard. While static\nand dynamic analysis techniques or program repair have made significant\nprogress, more work is still needed to make them relevant to real-world code.\nOn the critical path to that goal is understanding what real-world\nfloating-point code looks like. To close that knowledge gap, this paper\npresents the first large-scale empirical study of floating-point arithmetic\nusage in statically typed languages across public GitHub repositories. We\nfollow state-of the art mining practices including random sampling and\nfiltering based on only intrinsic properties to avoid bias, and identify\nfloating-point usage by searching for keywords in the source code, and\nprogramming language constructs (e.g., loops) by parsing the code. Our\nevaluation supports the claim often made in papers that floating-point\narithmetic is widely used. Comparing statistics such as size and usage of\ncertain constructs and functions, we find that benchmarks used in literature to\nevaluate automated reasoning techniques for floating-point arithmetic are in\ncertain aspects representative of 'real-world' code, but not in all. We aim for\nour study and dataset to help future techniques for floating-point arithmetic\nto be designed and evaluated to match actual users' expectations."}
{"id": "2509.05160", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.05160", "abs": "https://arxiv.org/abs/2509.05160", "authors": ["Steven Smyth", "Daniel Busch", "Moez Ben Haj Hmida", "Edward A. Lee", "Bernhard Steffen"], "title": "AI-Assisted Modeling: DSL-Driven AI Interactions", "comment": "7 pages, 4 figures", "summary": "AI-assisted programming greatly increases software development performance.\nWe enhance this potential by integrating transparency through domain-specific\nmodeling techniques and providing instantaneous, graphical visualizations that\naccurately represent the semantics of AI-generated code. This approach\nfacilitates visual inspection and formal verification, such as model checking.\n  Formal models can be developed using programming, natural language prompts,\nvoice commands, and stage-wise refinement, with immediate feedback after each\ntransformation step. This support can be tailored to specific domains or\nintended purposes, improving both code generation and subsequent validation\nprocesses.\n  To demonstrate the effectiveness of this approach, we have developed a\nprototype as a Visual Studio Code extension for the Lingua Franca language.\nThis prototype showcases the potential for novel domain-specific modeling\npractices, offering an advancement in how models are created, visualized, and\nverified."}
{"id": "2509.05293", "categories": ["cs.PL", "cs.CL", "cs.SE", "D.3; F.3"], "pdf": "https://arxiv.org/pdf/2509.05293", "abs": "https://arxiv.org/abs/2509.05293", "authors": ["Julien Vanegue", "Jules Villard", "Peter O'Hearn", "Azalea Raad"], "title": "Non-Termination Proving: 100 Million LoC and Beyond", "comment": "14 pages, 4 figures", "summary": "We report on our tool, Pulse Infinite, that uses proof techniques to show\nnon-termination (divergence) in large programs. Pulse Infinite works\ncompositionally and under-approximately: the former supports scale, and the\nlatter ensures soundness for proving divergence. Prior work focused on small\nbenchmarks in the tens or hundreds of lines of code (LoC), and scale limits\ntheir practicality: a single company may have tens of millions, or even\nhundreds of millions of LoC or more. We report on applying Pulse Infinite to\nover a hundred million lines of open-source and proprietary software written in\nC, C++, and Hack, identifying over 30 previously unknown issues, establishing a\nnew state of the art for detecting divergence in real-world codebases."}
{"id": "2509.04481", "categories": ["cs.GR", "cs.AI", "cs.CL", "cs.MM"], "pdf": "https://arxiv.org/pdf/2509.04481", "abs": "https://arxiv.org/abs/2509.04481", "authors": ["Yi-Chun Chen", "Arnav Jhala"], "title": "Narrative-to-Scene Generation: An LLM-Driven Pipeline for 2D Game Environments", "comment": null, "summary": "Recent advances in large language models(LLMs) enable compelling story\ngeneration, but connecting narrative text to playable visual environments\nremains an open challenge in procedural content generation(PCG). We present a\nlightweight pipeline that transforms short narrative prompts into a sequence of\n2D tile-based game scenes, reflecting the temporal structure of stories. Given\nan LLM-generated narrative, our system identifies three key time frames,\nextracts spatial predicates in the form of \"Object-Relation-Object\" triples,\nand retrieves visual assets using affordance-aware semantic embeddings from the\nGameTileNet dataset. A layered terrain is generated using Cellular Automata,\nand objects are placed using spatial rules grounded in the predicate structure.\nWe evaluated our system in ten diverse stories, analyzing tile-object matching,\naffordance-layer alignment, and spatial constraint satisfaction across frames.\nThis prototype offers a scalable approach to narrative-driven scene generation\nand lays the foundation for future work on multi-frame continuity, symbolic\ntracking, and multi-agent coordination in story-centered PCG."}
{"id": "2509.04513", "categories": ["cs.GR", "cs.NA", "math.NA", "physics.app-ph", "65Kxx"], "pdf": "https://arxiv.org/pdf/2509.04513", "abs": "https://arxiv.org/abs/2509.04513", "authors": ["Ming Du", "Volker Rose", "Junjing Deng", "Dileep Singh", "Si Chen", "Mathew J. Cherukara"], "title": "Fidelity-preserving enhancement of ptychography with foundational text-to-image models", "comment": null, "summary": "Ptychographic phase retrieval enables high-resolution imaging of complex\nsamples but often suffers from artifacts such as grid pathology and multislice\ncrosstalk, which degrade reconstructed images. We propose a plug-and-play (PnP)\nframework that integrates physics model-based phase retrieval with text-guided\nimage editing using foundational diffusion models. By employing the alternating\ndirection method of multipliers (ADMM), our approach ensures consensus between\ndata fidelity and artifact removal subproblems, maintaining physics consistency\nwhile enhancing image quality. Artifact removal is achieved using a text-guided\ndiffusion image editing method (LEDITS++) with a pre-trained foundational\ndiffusion model, allowing users to specify artifacts for removal in natural\nlanguage. Demonstrations on simulated and experimental datasets show\nsignificant improvements in artifact suppression and structural fidelity,\nvalidated by metrics such as peak signal-to-noise ratio (PSNR) and diffraction\npattern consistency. This work highlights the combination of text-guided\ngenerative models and model-based phase retrieval algorithms as a transferable\nand fidelity-preserving method for high-quality diffraction imaging."}
{"id": "2509.05285", "categories": ["cs.GR", "cs.CV"], "pdf": "https://arxiv.org/pdf/2509.05285", "abs": "https://arxiv.org/abs/2509.05285", "authors": ["Haruo Fujiwara", "Yusuke Mukuta", "Tatsuya Harada"], "title": "Improved 3D Scene Stylization via Text-Guided Generative Image Editing with Region-Based Control", "comment": null, "summary": "Recent advances in text-driven 3D scene editing and stylization, which\nleverage the powerful capabilities of 2D generative models, have demonstrated\npromising outcomes. However, challenges remain in ensuring high-quality\nstylization and view consistency simultaneously. Moreover, applying style\nconsistently to different regions or objects in the scene with semantic\ncorrespondence is a challenging task. To address these limitations, we\nintroduce techniques that enhance the quality of 3D stylization while\nmaintaining view consistency and providing optional region-controlled style\ntransfer. Our method achieves stylization by re-training an initial 3D\nrepresentation using stylized multi-view 2D images of the source views.\nTherefore, ensuring both style consistency and view consistency of stylized\nmulti-view images is crucial. We achieve this by extending the style-aligned\ndepth-conditioned view generation framework, replacing the fully shared\nattention mechanism with a single reference-based attention-sharing mechanism,\nwhich effectively aligns style across different viewpoints. Additionally,\ninspired by recent 3D inpainting methods, we utilize a grid of multiple depth\nmaps as a single-image reference to further strengthen view consistency among\nstylized images. Finally, we propose Multi-Region Importance-Weighted Sliced\nWasserstein Distance Loss, allowing styles to be applied to distinct image\nregions using segmentation masks from off-the-shelf models. We demonstrate that\nthis optional feature enhances the faithfulness of style transfer and enables\nthe mixing of different styles across distinct regions of the scene.\nExperimental evaluations, both qualitative and quantitative, demonstrate that\nour pipeline effectively improves the results of text-driven 3D stylization."}
